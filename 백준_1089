## 스타트링크 
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int N;
long long SUM = 0;
long long canNum = 1;
vector<string> info(5, ""); // 안내판
vector<string> nums{"###...#.###.###.#.#.###.###.###.###.###", 
                    "#.#...#...#...#.#.#.#...#.....#.#.#.#.#",
                    "#.#...#.###.###.###.###.###...#.###.###",
                    "#.#...#.#.....#...#...#.#.#...#.#.#...#",
                    "###...#.###.###...#.###.###...#.###.###"};

vector<vector<int>> spare; // 안내판의 숫자가 될 수 있는 수

void match(int nIdx){ // 0~9까지 중 어느 수가 될 수 있을 지 확인
    vector<int> v;
    for(int i = 0; i<10; i++){ 
        int idx = i * 4;
        bool flag = true;
        for(int c = 0; c<3; c++){
            for(int r = 0; r<5; r++){
                if(info[r][(nIdx*4)+c] == '#' && nums[r][idx+c] == '.'){
                    flag = false;
                    break;
                }
            }
            if(!flag) break;
        }
        if(flag) v.push_back(i*pow(10,(N-1-nIdx)));
    }
    spare.push_back(v);
    canNum *= v.size();
}

void avg(){
    for(int i = 0; i<N; i++){
        long long n = canNum / (long long)spare[i].size();
        long long s = 0;
        for(int j = 0; j<spare[i].size(); j++){
            s += spare[i][j];
        }
        SUM += s*n;
    }
}


int main(){
    cin >> N;
    for(int i = 0; i<5; i++){
        cin >> info[i];
    }

    for(int i = 0; i<N; i++){
        match(i);
        if(spare[i].size() == 0) {
            cout << -1; 
            return 0;
        }
    }

    avg();

    printf("%.10f", (double)SUM / (double)canNum);
/*
    for(int i = 0; i<N; i++){
        for(int j = 0; j<spare[i].size(); j++){
            cout << spare[i][j] << " ";
        }
        cout << endl;
    }
*/
    return 0;
}
