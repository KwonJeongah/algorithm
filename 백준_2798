#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int N, M, Max = -1;
vector<int> card;
vector<int> visited(100, 0);

void dfs(int cnt, int sum) {
	if (cnt == 3) {
		if (Max < sum) Max = sum;
		return;
	}

	for (int i = 0; i < N; i++) {
		if (visited[i] == 0 && sum + card[i] <= M) {
			visited[i] = 1;
			dfs(cnt + 1, sum + card[i]);
			visited[i] = 0;
		}
	}
}

int main() {
	int ans;
	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		int tmp;
		cin >> tmp;
		card.push_back(tmp);
	}
	sort(card.rbegin(), card.rend());

	dfs(0, 0);

	cout << Max;

	return 0;
}
